system_name:
  help: "What is the system name?"
  default: "my-system"
  type: str

manage_spaces:
  help: "Auto-manage cloud.gov spaces?"
  default: true
  type: bool

cloud_gov_organization:
  help: "What is the cloud.gov organization name?"
  # If we're not managing spaces, it's likely they're working in a sandbox
  # Otherwise, it's likely an agency-component-office-program org name
  # TODO: Can we make the defaults more helpful for non-TTS orgs?
  default: |-
        {% if manage_spaces != true -%}
            sandbox-gsa
        {%- else -%}
            gsa-tts-solutions-{{system_name}}
        {%- endif %}
  validator: "{% if cloud_gov_organization|length == 0 %}Must specify an org name{% endif %}"
  type: str

cloud_gov_spaces:
  help: "Which space(s) in {{ cloud_gov_organization }} should be used?"
  placeholder: |-
        {% if manage_spaces != true -%}
            firstname.lastname
        {%- endif %}
  default: |-
        {% if manage_spaces == true -%}
            dev staging prod
        {%- endif %}
  validator: "{% if cloud_gov_spaces|length == 0 %}Must specify at least one space name{% endif %}"
  type: str

spaces:
  when: false
  default: "{{ cloud_gov_spaces.split() }}"
  type: yaml

production_space:
  help: "Which space is the production space?"
  choices: |-
        {% for space in spaces %}
          - "{{ space }}"
        {%- endfor %}
  # The last one seems likely (and in the default "production" comes last)
  default: "{{ spaces | last }}"
  type: str

sandbox_spaces:
  help: "Which spaces are sandbox spaces?"
  choices: |-
        {% set spaces = cloud_gov_spaces.split() -%}
        {% for space in spaces %}
          - "{{ space }}"
        {%- endfor %}
  # Spaces that look like "first.last" are likely candidates, select them by default
  default: |-
        {% for space in spaces if "." in space %}
          - "{{ space }}"
        {% endfor %}
  multiselect: true
  type: yaml

applications:
  help: "Description of the applications (YAML list, e.g. - name: frontend\n  type: astro)"
  default:
    - name: frontend
      type: astro
    - name: backend
      type: astro
  multiline: true
  type: yaml

_subdirectory: "templates/terraform"
_exclude:
  # When managing an org's spaces, exclude the sandbox bootstrap files
  - "{% if manage_spaces == true %}bootstrap/sandbox.tf{% endif %}"
  - "{% if manage_spaces == true %}bootstrap/templates/sandbox_imports.tf.tftpl{% endif %}"
  # When using a sandbox, exclude the org bootstrap files and production-specific variables
  - "{% if manage_spaces != true %}bootstrap/org.tf{% endif %}"
  - "{% if manage_spaces != true %}bootstrap/templates/org_imports.tf.tftpl{% endif %}"
  - "{% if manage_spaces != true %}bootstrap/users.auto.tfvars{% endif %}"
  - "{% if manage_spaces != true %}production.tfvars{% endif %}"

# # A DRYer version of the above... doesn't work!
# # See discussion at https://github.com/orgs/copier-org/discussions/2144
# _exclude: |
#   {%- if manage_spaces == true %}
#   # When managing an org's spaces, exclude the sandbox bootstrap files
#   - bootstrap/sandbox.tf
#   - bootstrap/templates/sandbox_imports.tf.tftpl
#   {%- else %}
#   # When using a sandbox, exclude the org bootstrap files and production-specific variables
#   - bootstrap/org.tf
#   - bootstrap/templates/org_imports.tf.tftpl
#   - bootstrap/users.auto.tfvars
#   - production.tfvars
#   {%- endif %}

